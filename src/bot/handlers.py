import requests
from src.db.database import add_expenses, get_expenses

def register_handlers(bot):
    @bot.message_handler(commands=['start'])
    def start(message):
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø Cash'–∏–∫ üí∏")

    @bot.message_handler(commands=['help'])
    def help_command(message):
        bot.send_message(message.chat.id, "–ö–æ–º–∞–Ω–¥—ã: /add, /stats, /help")
        
    @bot.message_handler(commands=['add'])
    def add_command(message):
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ —Å—É–º–º—É –∏ –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –∑–∞–ø–ª–∞—Ç–∏—Ç—å, –∫ –ø—Ä–∏–º–µ—Ä—É:\n200 12.05.26")
        bot.register_next_step_handler(message, save_expense)
        
    def save_expense(message):
        try:
            amount_str, date = message.text.split()
            amount = float(amount_str)
            add_expenses(message.from_user.id, amount, date)
            bot.send_message(message.chat.id, "–£—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ")
        except Exception:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π —Ç–∞–∫: 300 07.08.26")
            
    @bot.message_handler(commands=['stats'])
    def show_stats(message):
        rows = get_expenses(message.from_user.id)
        if not rows:
            bot.send_message(message.chat.id, "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π.")
        else:
            text = "\n".join([f"{amount} ‚ÇΩ ‚Äî ({date})" for amount, date in rows])
            bot.send_message(message.chat.id, "üí∞ –ü–æ–¥–ø–∏—Å–∫–∏:\n" + text)
            
    @bot.message_handler(commands=['wake'])
    def wake_bot(message):
        url = "https://botik-9uuk.onrender.com/ping"
        try:
            requests.get(url)
            bot.send_message(message.chat.id, "üîî –ë–æ—Ç —Ä–∞–∑–±—É–∂–µ–Ω.")
        except Exception:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–±—É–¥–∏—Ç—å —Å–µ—Ä–≤–µ—Ä.")